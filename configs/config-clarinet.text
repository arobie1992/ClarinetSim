# network size
SIZE 3

# parameters of periodic execution
CYCLES 10
CYCLE SIZE*1

# parameters of message transfer
# delay values here are relative to cycle length, in percentage,
# eg 50 means half the cycle length, 200 twice the cycle length, etc.
MINDELAY 0
MAXDELAY 0
# drop is a probability, 0<=DROP<=1
DROP 0

random.seed 1234567890
network.size SIZE
simulation.endtime CYCLE*CYCLES
simulation.logtime CYCLE

################### protocols ===========================

protocol.link peersim.core.IdleProtocol

protocol.avg clarinetsim.ClarinetNode
protocol.avg.linkable link
protocol.avg.step CYCLE
protocol.avg.transport tr
protocol.avg.max_connections 1
protocol.avg.initial_reputation 100
protocol.avg.min_trusted_reputation 0
protocol.avg.weak_penalty_value 1
protocol.avg.strong_penalty_value 3
protocol.avg.print_interval 1
protocol.avg.print_connections false
protocol.avg.print_log false
protocol.avg.print_reputations true
protocol.avg.num_malicious 1

protocol.urt UniformRandomTransport
protocol.urt.mindelay (CYCLE*MINDELAY)/100
protocol.urt.maxdelay (CYCLE*MAXDELAY)/100

protocol.tr UnreliableTransport
protocol.tr.transport urt
protocol.tr.drop DROP

################### initialization ======================

init.rndlink WireKOut
init.rndlink.k 20
init.rndlink.protocol link

init.vals LinearDistribution
init.vals.protocol avg
init.vals.max SIZE
init.vals.min 1

init.sch CDScheduler
init.sch.protocol avg
init.sch.randstart

################ control ==============================

control.0 SingleValueObserver
control.0.protocol avg
control.0.step CYCLE

